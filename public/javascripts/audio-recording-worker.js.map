{"version":3,"sources":["webpack:///webpack/bootstrap f329385412ac0f1bfa0f","webpack:///./src/RecordingWorker.ts","webpack:///../vector-screencast/src/workers/RecordingWorker.ts"],"names":[],"mappings":"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","file":"javascripts/audio-recording-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f329385412ac0f1bfa0f\n **/","require('../../vector-screencast/src/workers/RecordingWorker');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/ts-loader?sourceMap!./src/RecordingWorker.ts\n **/","/// <reference path=\"../../node_modules/typescript/lib/lib.webworker.d.ts\" />\n// communication protocol between the browser and this worker\nvar CMD_INIT = \"init\";\nvar CMD_PUSH_DATA = \"pushData\";\nvar CMD_FINISH = \"finish\";\n/**\n * Report error to the user.\n * @param {String} msg\n */\nfunction error(msg) {\n    console.log(\"Recording Worker error: \" + msg);\n    postMessage({ type: \"error\", msg: msg }); // report error\n}\n/** The audio processing object */\nvar audioProcessor = null;\n/**\n * Worker entry point.\n * @param {object}  Message object\n */\nonmessage = function (e) {\n    var msg = e.data;\n    if (!msg.hasOwnProperty(\"cmd\")) {\n        console.log(\"Recording Worker error: message does not contain 'cmd' property.\");\n    }\n    try {\n        switch (msg.cmd) {\n            // start new upload\n            case CMD_INIT:\n                audioProcessor = new BinaryAudioStreamingProcessor({\n                    host: msg.host,\n                    port: msg.port,\n                    path: msg.path,\n                    secured: false,\n                    opened: function () { return console.log(\"Streaming was initialised successfully.\"); },\n                    finished: function (files) { return postMessage({ type: \"finished\", files: files }); },\n                    error: function () { return error(\"Can't init audio processor\"); }\n                });\n                break;\n            // next block of data is available\n            case CMD_PUSH_DATA:\n                if (!audioProcessor.PushData(msg.data)) {\n                    postMessage({ type: \"network-error\" });\n                }\n                break;\n            // user stopped the recording\n            case CMD_FINISH:\n                audioProcessor.Finish({\n                    success: function (data) { return postMessage({ error: false, files: data.files }); },\n                    error: error\n                });\n                break;\n            // ?? - error\n            default:\n                error(\"Unknown cmd \" + msg.cmd);\n                break;\n        }\n    }\n    catch (e) {\n        console.log(\"Streaming Worker ERROR!\", e);\n    }\n};\n/**\n * This class enables communication over WebSockets using BinaryJS library.\n */\nvar BinaryAudioStreamingProcessor = (function () {\n    /**\n     * Creates a WebSocket and tries to connect.\n     */\n    function BinaryAudioStreamingProcessor(cfg) {\n        var _this = this;\n        this.cfg = cfg;\n        this.connected = false;\n        this.socket = null;\n        /**\n         * Stop recording.\n         */\n        this.Finish = function (cfg) {\n            cfg = cfg || {};\n            if (!!this.socket && this.socket.readyState === WebSocket.OPEN) {\n                // prepare the reaction - close the stream and wait for response\n                console.log(\"Closing stream.\");\n                this.socket.send(JSON.stringify({\n                    type: \"end\"\n                }));\n            }\n            else {\n                this.cfg.error(\"Can't close stream - connection does not exist.\");\n            }\n        };\n        this.numberOfSentBinaryMessages = 0;\n        try {\n            // the socket is a WebSocket - protocol \"ws://\" - \"wss://\" is secured\n            var protocol = cfg.secured ? \"wss://\" : \"ws://\";\n            this.url = protocol + cfg.host + \":\" + cfg.port + cfg.path;\n            console.log(\"Trying to connnect to: \", this.url);\n            // this script uses BinaryJS library\n            // see https://binaryjs.com/\n            this.socket = new WebSocket(this.url);\n            this.socket.onopen = function () { return _this.OnOpen(); };\n            this.socket.onerror = function (error) { return _this.Error(error); };\n            this.socket.onmessage = function (response) { return _this.ReceiveData(JSON.parse(response.data)); };\n        }\n        catch (e) {\n            console.log(\"Error while uploading audio to remote server:\", e);\n            this.cfg.error(\"Can't connect to the audio server.\");\n        }\n    }\n    /**\n     * Create the upload stream as soon as we are connected to the remote server.\n     */\n    BinaryAudioStreamingProcessor.prototype.OnOpen = function () {\n        console.log(\"Connection to audio server opened.\");\n        // success\n        this.socket.send(JSON.stringify({\n            type: \"start\",\n            channels: this.cfg.channels || 1,\n            sampleRate: this.cfg.sampleRate || 44100,\n            bitDepth: this.cfg.bitDepth || 16\n        }));\n        this.connected = true;\n        this.cfg.opened();\n    };\n    /**\n     * Handle connection error\n     */\n    BinaryAudioStreamingProcessor.prototype.Error = function (error) {\n        console.log(\"Connection error: \", error);\n        this.cfg.error(\"Connection error: \" + error.toString());\n    };\n    /**\n     * Send data to the remote server.\n     * It is necessary to encode the data into 16-bit integers, so the other side can work with them properly.\n     */\n    BinaryAudioStreamingProcessor.prototype.PushData = function (data) {\n        if (this.socket) {\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                this.Error(\"Connection was lost\");\n                this.socket = null;\n                return false;\n            }\n            else {\n                this.socket.send(this.ConvertTo16BitInt(data).buffer);\n                return true;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Input value is in the range of [-1; 1]\n     * - I need to convert it to 16 bit integer to be able to save it as WAV later.\n     * Magic explained: 0x7FFF == 32767 == (2^15 - 1) is the maximum positive value of a 16-bit integer\n     */\n    BinaryAudioStreamingProcessor.prototype.ConvertTo16BitInt = function (buffer) {\n        var tmp = new Int16Array(buffer.length);\n        for (var i = 0; i < buffer.length; i++) {\n            tmp[i] = Math.min(1, buffer[i]) * 0x7FFF;\n        }\n        return tmp;\n    };\n    ;\n    /**\n     * A JSON response from the remote server.\n     * If upload went well, the server has converted the file into some advanced audio format, like mp3,\n     * and it sends a list of files it had created on the server.\n     */\n    BinaryAudioStreamingProcessor.prototype.ReceiveData = function (data) {\n        if (data.error === false) {\n            // success\n            console.log(\"Result: SUCCESS - data was written into \", data.files);\n            this.cfg.finished(data.files);\n        }\n        else {\n            this.cfg.error(\"Error was reported.\");\n        }\n    };\n    return BinaryAudioStreamingProcessor;\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/ts-loader?sourceMap!../vector-screencast/src/workers/RecordingWorker.ts\n **/"],"sourceRoot":""}